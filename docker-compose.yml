version: '3.8'
services:

  # MongoDb Service
  mongodb:
    image: mongo:latest # use the latest image.
    container_name: mongodb
    restart: unless-stopped
    environment: # set required env variables to access mongo
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    ports:
      - "27017:27017"
    volumes: # optional to preserve database after container is deleted.
      - ./database-data:/data/db

  # Mongo Express Service
  mongo-express:
    image: mongo-express:latest # latest image
    container_name: mongo-express
    restart: unless-stopped
    ports:
      - "8088:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
    depends_on:
      - mongodb

  # Rabbitmq Service
  rabbitmq:
    image: rabbitmq:3.13-management
    container_name: 'rabbitmq'
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - rabbitmq_go_net
      -
  # Auth server
  auth-server:
    image: kjeff24/travel-booking-system-auth-server:0.0.1-SNAPSHOT
    container_name: auth-server
    pull_policy: always
    ports:
      - "8080:8080"
    depends_on:
      - mongodb
    expose:
      - "8765"

  # Config server
  config-server:
    image: kjeff24/travel-booking-system-config-server:0.0.1-SNAPSHOT
    container_name: config-server
    pull_policy: always
    ports:
      - "8888:8888"

  # Discovery server
  discovery-server:
    image: kjeff24/travel-booking-system-discovery-server:0.0.1-SNAPSHOT
    container_name: discovery-server
    pull_policy: always
    ports:
      - "8761:8761"
    depends_on:
      - config-server

  # Gateway server
  gateway:
    image: kjeff24/travel-booking-system-gateway:0.0.1-SNAPSHOT
    container_name: gateway
    pull_policy: always
    ports:
      - "8765:8765"
    depends_on:
      - config-server
      - discovery-server
    expose:
      - "8765"

  # Booking Service
  booking-service:
    image: kjeff24/travel-booking-system-booking-service:0.0.1-SNAPSHOT
    container_name: booking-service
    pull_policy: always
    depends_on:
      - auth-server
      - rabbitmq
      - config-server
      - mongodb
      - discovery-server
      - gateway

  # Category Service
  category-service:
    image: kjeff24/travel-booking-system-category-service:0.0.1-SNAPSHOT
    container_name: category-service
    pull_policy: always
    depends_on:
      - auth-server
      - rabbitmq
      - config-server
      - mongodb
      - discovery-server
      - gateway

  # Order Service
  order-service:
    image: kjeff24/travel-booking-system-order-service:0.0.1-SNAPSHOT
    container_name: order-service
    pull_policy: always
    depends_on:
      - auth-server
      - rabbitmq
      - config-server
      - mongodb
      - discovery-server
      - gateway

  # Payment Service
  payment-service:
    image: kjeff24/travel-booking-system-payment-service:0.0.1-SNAPSHOT
    container_name: payment-service
    pull_policy: always
    depends_on:
      - auth-server
      - rabbitmq
      - config-server
      - mongodb
      - discovery-server
      - gateway

  # Frontend Service
  frontend-service:
    image: kjeff24/travel-booking-system-frontend:0.0.1-SNAPSHOT
    container_name: front-service
    pull_policy: always
    depends_on:
      - auth-server
      - gateway
    ports:
      - "4200:4200"

networks:
  rabbitmq_go_net:
    driver: bridge